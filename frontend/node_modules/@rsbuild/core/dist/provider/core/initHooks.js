"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var initHooks_exports = {};
__export(initHooks_exports, {
  initHooks: () => initHooks
});
module.exports = __toCommonJS(initHooks_exports);
var import_shared = require("@rsbuild/shared");
function initHooks() {
  return {
    /** parameters are not bundler-related */
    onExitHook: (0, import_shared.createAsyncHook)(),
    onDevCompileDoneHook: (0, import_shared.createAsyncHook)(),
    onAfterStartDevServerHook: (0, import_shared.createAsyncHook)(),
    onBeforeStartDevServerHook: (0, import_shared.createAsyncHook)(),
    onAfterStartProdServerHook: (0, import_shared.createAsyncHook)(),
    onBeforeStartProdServerHook: (0, import_shared.createAsyncHook)(),
    /** parameters are bundler-related */
    onAfterBuildHook: (0, import_shared.createAsyncHook)(),
    onBeforeBuildHook: (0, import_shared.createAsyncHook)(),
    modifyRspackConfigHook: (0, import_shared.createAsyncHook)(),
    modifyBundlerChainHook: (0, import_shared.createAsyncHook)(),
    modifyWebpackChainHook: (0, import_shared.createAsyncHook)(),
    modifyWebpackConfigHook: (0, import_shared.createAsyncHook)(),
    modifyRsbuildConfigHook: (0, import_shared.createAsyncHook)(),
    onAfterCreateCompilerHook: (0, import_shared.createAsyncHook)(),
    onBeforeCreateCompilerHook: (0, import_shared.createAsyncHook)()
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  initHooks
});

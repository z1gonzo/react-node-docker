"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var determineAsValue_exports = {};
__export(determineAsValue_exports, {
  determineAsValue: () => determineAsValue
});
module.exports = __toCommonJS(determineAsValue_exports);
var import_path = __toESM(require("path"));
var import_url = require("url");
/**
 * @license
 * Copyright 2018 Google Inc.
 * https://github.com/vuejs/preload-webpack-plugin/blob/master/src/lib/determine-as-value.js
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function determineAsValue({
  href,
  file
}) {
  const url = new import_url.URL(file || href, "https://example.com");
  const extension = import_path.default.extname(url.pathname);
  if ([".css"].includes(extension)) {
    return "style";
  }
  if ([
    ".png",
    ".jpg",
    ".jpeg",
    ".jfif",
    ".pjpeg",
    ".pjp",
    ".svg",
    ".webp",
    ".bmp",
    ".apng",
    ".avif",
    ".gif",
    ".ico",
    ".cur",
    ".tif",
    ".tiff"
  ].includes(extension)) {
    return "image";
  }
  if ([".mp4", ".ogg", ".webm"].includes(extension)) {
    return "video";
  }
  if ([".mp3", ".wav"].includes(extension)) {
    return "audio";
  }
  if ([".woff2", ".otf", ".ttf", ".woff", ".eot"].includes(extension)) {
    return "font";
  }
  if ([".vtt"].includes(extension)) {
    return "track";
  }
  return "script";
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  determineAsValue
});

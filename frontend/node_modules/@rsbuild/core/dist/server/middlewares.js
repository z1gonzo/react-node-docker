"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var middlewares_exports = {};
__export(middlewares_exports, {
  faviconFallbackMiddleware: () => faviconFallbackMiddleware,
  getHtmlFallbackMiddleware: () => getHtmlFallbackMiddleware,
  notFoundMiddleware: () => notFoundMiddleware
});
module.exports = __toCommonJS(middlewares_exports);
var import_shared = require("@rsbuild/shared");
var import_path = __toESM(require("path"));
var import_fs = __toESM(require("fs"));
const faviconFallbackMiddleware = (req, res, next) => {
  if (req.url === "/favicon.ico") {
    res.statusCode = 204;
    res.end();
  } else {
    next();
  }
};
const notFoundMiddleware = (_req, res, _next) => {
  res.statusCode = 404;
  res.end();
};
const getHtmlFallbackMiddleware = ({ htmlFallback, distPath, callback }) => {
  return (req, res, next) => {
    if (
      // Only accept GET or HEAD
      req.method !== "GET" && req.method !== "HEAD" || // Require Accept header
      !req.headers || typeof req.headers.accept !== "string" || // Ignore JSON requests
      req.headers.accept.includes("application/json") || // Require Accept: text/html or */*
      !(req.headers.accept.includes("text/html") || req.headers.accept.includes("*/*")) || !req.url || ["/favicon.ico"].includes(req.url)
    ) {
      return next();
    }
    const { url } = req;
    let pathname = url;
    try {
      pathname = decodeURIComponent(url);
    } catch (err) {
      import_shared.logger.error(
        new Error(`Invalid URL: ${import_shared.color.yellow(url)}`, { cause: err })
      );
      return next();
    }
    let outputFileSystem = import_fs.default;
    if (res.locals.webpack) {
      const { devMiddleware } = res.locals.webpack;
      outputFileSystem = devMiddleware.outputFileSystem;
    }
    const rewrite = (newUrl) => {
      (0, import_shared.debug)?.(`Rewriting ${req.method} ${req.url} to ${newUrl}`);
      req.url = newUrl;
      if (callback) {
        return callback(req, res, (...args) => {
          next(...args);
        });
      } else {
        return next();
      }
    };
    if (pathname.endsWith("/")) {
      const newUrl = url + "index.html";
      const filePath = import_path.default.join(distPath, pathname, "index.html");
      if (outputFileSystem.existsSync(filePath)) {
        return rewrite(newUrl);
      }
    } else if (
      // '/main' => '/main.html'
      !pathname.endsWith(".html")
    ) {
      const newUrl = url + ".html";
      const filePath = import_path.default.join(distPath, pathname + ".html");
      if (outputFileSystem.existsSync(filePath)) {
        return rewrite(newUrl);
      }
    }
    if (htmlFallback === "index") {
      if (outputFileSystem.existsSync(import_path.default.join(distPath, "index.html"))) {
        return rewrite("/index.html");
      }
    }
    next();
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  faviconFallbackMiddleware,
  getHtmlFallbackMiddleware,
  notFoundMiddleware
});

"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var createHook_exports = {};
__export(createHook_exports, {
  createAsyncHook: () => createAsyncHook
});
module.exports = __toCommonJS(createHook_exports);
function createAsyncHook() {
  const callbacks = [];
  const tap = (cb) => {
    callbacks.push(cb);
  };
  const call = async (...args) => {
    const params = args.slice(0);
    for (const cb of callbacks) {
      const result = await cb(...params);
      if (result !== void 0) {
        params[0] = result;
      }
    }
    return params;
  };
  return {
    tap,
    call
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createAsyncHook
});

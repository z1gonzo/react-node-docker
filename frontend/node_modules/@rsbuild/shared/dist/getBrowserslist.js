"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var getBrowserslist_exports = {};
__export(getBrowserslist_exports, {
  getBrowserslist: () => getBrowserslist,
  getBrowserslistWithDefault: () => getBrowserslistWithDefault
});
module.exports = __toCommonJS(getBrowserslist_exports);
var import_browserslist = __toESM(require("../compiled/browserslist"));
var import_constants = require("./constants");
const browsersListCache = /* @__PURE__ */ new Map();
async function getBrowserslist(path) {
  if (browsersListCache.has(path)) {
    return browsersListCache.get(path);
  }
  const result = import_browserslist.default.loadConfig({ path });
  if (result) {
    browsersListCache.set(path, result);
    return result;
  }
  return null;
}
async function getBrowserslistWithDefault(path, config, target) {
  const { overrideBrowserslist: overrides = {} } = config?.output || {};
  if (target === "web" || target === "web-worker") {
    if (Array.isArray(overrides)) {
      return overrides;
    }
    if (overrides[target]) {
      return overrides[target];
    }
    const browserslistrc = await getBrowserslist(path);
    if (browserslistrc) {
      return browserslistrc;
    }
  }
  if (!Array.isArray(overrides) && overrides[target]) {
    return overrides[target];
  }
  return import_constants.DEFAULT_BROWSERSLIST[target];
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getBrowserslist,
  getBrowserslistWithDefault
});

"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deprecated_resolveBuiltins = exports.RspackBuiltinPlugin = void 0;
var base_1 = require("./base");
Object.defineProperty(exports, "RspackBuiltinPlugin", { enumerable: true, get: function () { return base_1.RspackBuiltinPlugin; } });
__exportStar(require("./DefinePlugin"), exports);
__exportStar(require("./ProvidePlugin"), exports);
__exportStar(require("./BannerPlugin"), exports);
__exportStar(require("./ProgressPlugin"), exports);
__exportStar(require("./EntryPlugin"), exports);
__exportStar(require("./ExternalsPlugin"), exports);
__exportStar(require("./NodeTargetPlugin"), exports);
__exportStar(require("./ElectronTargetPlugin"), exports);
__exportStar(require("./HttpExternalsRspackPlugin"), exports);
__exportStar(require("./EnableChunkLoadingPlugin"), exports);
__exportStar(require("./EnableLibraryPlugin"), exports);
__exportStar(require("./EnableWasmLoadingPlugin"), exports);
__exportStar(require("./ChunkPrefetchPreloadPlugin"), exports);
__exportStar(require("./ArrayPushCallbackChunkFormatPlugin"), exports);
__exportStar(require("./CommonJsChunkFormatPlugin"), exports);
__exportStar(require("./ModuleChunkFormatPlugin"), exports);
__exportStar(require("./HotModuleReplacementPlugin"), exports);
__exportStar(require("./WebWorkerTemplatePlugin"), exports);
__exportStar(require("./WorkerPlugin"), exports);
__exportStar(require("./LimitChunkCountPlugin"), exports);
__exportStar(require("./MergeDuplicateChunksPlugin"), exports);
__exportStar(require("./SplitChunksPlugin"), exports);
__exportStar(require("./NamedModuleIdsPlugin"), exports);
__exportStar(require("./DeterministicModuleIdsPlugin"), exports);
__exportStar(require("./NamedChunkIdsPlugin"), exports);
__exportStar(require("./DeterministicChunkIdsPlugin"), exports);
__exportStar(require("./RealContentHashPlugin"), exports);
__exportStar(require("./RemoveEmptyChunksPlugin"), exports);
__exportStar(require("./EnsureChunkConditionsPlugin"), exports);
__exportStar(require("./WarnCaseSensitiveModulesPlugin"), exports);
__exportStar(require("./DataUriPlugin"), exports);
__exportStar(require("./FileUriPlugin"), exports);
__exportStar(require("./RuntimePlugin"), exports);
__exportStar(require("./JsonModulesPlugin"), exports);
__exportStar(require("./InferAsyncModulesPlugin"), exports);
__exportStar(require("./JavascriptModulesPlugin"), exports);
__exportStar(require("./AsyncWebAssemblyModulesPlugin"), exports);
__exportStar(require("./AssetModulesPlugin"), exports);
__exportStar(require("./SourceMapDevToolPlugin"), exports);
__exportStar(require("./EvalSourceMapDevToolPlugin"), exports);
__exportStar(require("./SideEffectsFlagPlugin"), exports);
__exportStar(require("./FlagDependencyExportsPlugin"), exports);
__exportStar(require("./FlagDependencyUsagePlugin"), exports);
__exportStar(require("./MangleExportsPlugin"), exports);
__exportStar(require("./HtmlRspackPlugin"), exports);
__exportStar(require("./CopyRspackPlugin"), exports);
__exportStar(require("./SwcJsMinimizerPlugin"), exports);
__exportStar(require("./SwcCssMinimizerPlugin"), exports);
const util_1 = require("../util");
const __1 = require("..");
const _1 = require(".");
const browserslist_1 = require("browserslist");
const swc_1 = require("../builtin-loader/swc");
function resolveTreeShaking(treeShaking, production) {
    return treeShaking !== undefined
        ? treeShaking.toString()
        : production
            ? "true"
            : "false";
}
function resolvePresetEnv(presetEnv, context) {
    var _a, _b;
    if (!presetEnv) {
        return undefined;
    }
    return {
        targets: (_b = (_a = presetEnv === null || presetEnv === void 0 ? void 0 : presetEnv.targets) !== null && _a !== void 0 ? _a : (0, browserslist_1.loadConfig)({ path: context })) !== null && _b !== void 0 ? _b : [],
        mode: presetEnv === null || presetEnv === void 0 ? void 0 : presetEnv.mode,
        coreJs: presetEnv === null || presetEnv === void 0 ? void 0 : presetEnv.coreJs
    };
}
function resolveDecorator(decorator) {
    if (decorator === false) {
        return undefined;
    }
    if (decorator === undefined || decorator === true) {
        decorator = {};
    }
    return Object.assign({
        legacy: true,
        emitMetadata: true
    }, decorator);
}
function deprecated_resolveBuiltins(builtins, options, compiler) {
    var _a, _b, _c;
    // deprecatedWarn(
    // 	`'configuration.builtins' has been deprecated, and will be drop support in 0.6.0, please follow ${termlink(
    // 		"the migration guide",
    // 		"https://www.rspack.dev/en/config/builtins.html" // TODO: write a migration guide
    // 	)}`,
    // 	enableDeprecatedWarning
    // );
    const contextPath = options.context;
    const production = options.mode === "production" || !options.mode;
    const isRoot = !compiler.isChild();
    if (builtins.define) {
        isRoot &&
            (0, util_1.deprecatedWarn)(`'builtins.define = ${JSON.stringify(builtins.define)}' has been deprecated, please migrate to ${(0, util_1.termlink)("rspack.DefinePlugin", "https://www.rspack.dev/config/plugins.html#defineplugin")}`);
        new _1.DefinePlugin(builtins.define).apply(compiler);
    }
    if (builtins.provide) {
        isRoot &&
            (0, util_1.deprecatedWarn)(`'builtins.provide = ${JSON.stringify(builtins.provide)}' has been deprecated, please migrate to ${(0, util_1.termlink)("rspack.ProvidePlugin", "https://www.rspack.dev/config/plugins.html#provideplugin")}`);
        new _1.ProvidePlugin(builtins.provide).apply(compiler);
    }
    if (builtins.progress) {
        isRoot &&
            (0, util_1.deprecatedWarn)(`'builtins.progress = ${JSON.stringify(builtins.progress)}' has been deprecated, please migrate to ${(0, util_1.termlink)("rspack.ProgressPlugin", "https://www.rspack.dev/config/plugins.html#progressplugin")}`);
        const progress = builtins.progress === true ? {} : builtins.progress;
        new _1.ProgressPlugin(progress).apply(compiler);
    }
    if (builtins.banner) {
        isRoot &&
            (0, util_1.deprecatedWarn)(`'builtins.banner = ${JSON.stringify(builtins.banner)}' has been deprecated, please migrate to ${(0, util_1.termlink)("rspack.BannerPlugin", "https://www.rspack.dev/config/plugins.html#bannerplugin")}`);
        if (Array.isArray(builtins.banner)) {
            for (const banner of builtins.banner) {
                new _1.BannerPlugin(banner).apply(compiler);
            }
        }
        else {
            new _1.BannerPlugin(builtins.banner).apply(compiler);
        }
    }
    if (builtins.html) {
        isRoot &&
            (0, util_1.deprecatedWarn)(`'builtins.html = ${JSON.stringify(builtins.html)}' has been deprecated, please migrate to ${(0, util_1.termlink)("rspack.HtmlRspackPlugin", "https://www.rspack.dev/config/plugins.html#htmlrspackplugin")}`);
        for (const html of builtins.html) {
            new __1.HtmlRspackPlugin(html).apply(compiler);
        }
    }
    if (builtins.copy) {
        isRoot &&
            (0, util_1.deprecatedWarn)(`'builtins.copy = ${JSON.stringify(builtins.copy)}' has been deprecated, please migrate to ${(0, util_1.termlink)("rspack.CopyRspackPlugin", "https://www.rspack.dev/config/plugins.html#copyrspackplugin")}`);
        new __1.CopyRspackPlugin(builtins.copy).apply(compiler);
    }
    if (builtins.minifyOptions) {
        isRoot &&
            (0, util_1.deprecatedWarn)(`'builtins.minifyOptions = ${JSON.stringify(builtins.minifyOptions)}' has been deprecated, please migrate to ${(0, util_1.termlink)("rspack.SwcJsMinimizerRspackPlugin", "https://www.rspack.dev/config/plugins.html#SwcJsMinimizerRspackPlugin")} and ${(0, util_1.termlink)("rspack.SwcCssMinimizerRspackPlugin", "https://www.rspack.dev/config/plugins.html#SwcCssMinimizerRspackPlugin")}`);
        if (options.optimization.minimize) {
            new __1.SwcJsMinimizerRspackPlugin(builtins.minifyOptions).apply(compiler);
            new __1.SwcCssMinimizerRspackPlugin().apply(compiler);
        }
    }
    if (builtins.devFriendlySplitChunks) {
        isRoot &&
            (0, util_1.deprecatedWarn)(`'builtins.devFriendlySplitChunks = ${JSON.stringify(builtins.devFriendlySplitChunks)}' has been deprecated, please switch to 'builtins.devFriendlySplitChunks = false' to use webpack's behavior.`);
    }
    let noEmitAssets = false;
    if (builtins.noEmitAssets) {
        isRoot &&
            (0, util_1.deprecatedWarn)(`'builtins.noEmitAssets = ${JSON.stringify(builtins.noEmitAssets)}' has been deprecated, this is only a temporary workaround for memory output FS, since Rspack have already supported memory output FS, so you can safely remove this`);
        noEmitAssets = true;
    }
    if ((_a = options.experiments.rspackFuture) === null || _a === void 0 ? void 0 : _a.disableTransformByDefault) {
        [
            "react",
            "pluginImport",
            "decorator",
            "presetEnv",
            "emotion",
            "relay"
        ].forEach(key => {
            if (builtins[key]) {
                isRoot &&
                    (0, util_1.deprecatedWarn)(`'builtins.${key} = ${JSON.stringify(builtins[key])}' only works for 'experiments.rspackFuture.disableTransformByDefault = false', please migrate to ${(0, util_1.termlink)("builtin:swc-loader options", "https://www.rspack.dev/guide/loader.html#builtinswc-loader")}`, true);
            }
        });
    }
    return {
        // TODO: discuss with webpack, this should move to css generator options
        css: options.experiments.css
            ? {
                modules: {
                    localsConvention: "asIs",
                    localIdentName: production
                        ? "[hash]"
                        : "[path][name][ext]__[local]",
                    exportsOnly: false,
                    ...(_b = builtins.css) === null || _b === void 0 ? void 0 : _b.modules
                }
            }
            : undefined,
        treeShaking: resolveTreeShaking(builtins.treeShaking, production),
        noEmitAssets: noEmitAssets,
        presetEnv: resolvePresetEnv(builtins.presetEnv, contextPath),
        decorator: resolveDecorator(builtins.decorator),
        devFriendlySplitChunks: (_c = builtins.devFriendlySplitChunks) !== null && _c !== void 0 ? _c : false,
        react: (0, swc_1.resolveReact)(builtins.react),
        pluginImport: (0, swc_1.resolvePluginImport)(builtins.pluginImport),
        emotion: builtins.emotion
            ? JSON.stringify((0, swc_1.resolveEmotion)(builtins.emotion, production))
            : undefined,
        relay: (0, swc_1.resolveRelay)(builtins.relay, contextPath)
    };
}
exports.deprecated_resolveBuiltins = deprecated_resolveBuiltins;
//# sourceMappingURL=index.js.map
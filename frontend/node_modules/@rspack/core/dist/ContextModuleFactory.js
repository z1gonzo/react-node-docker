"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextModuleFactory = void 0;
const tapable_1 = require("tapable");
class ContextModuleFactory {
    constructor() {
        this.hooks = {
            // /** @type {AsyncSeriesBailHook<[ResolveData], Module | false | void>} */
            // resolve: new AsyncSeriesBailHook(["resolveData"]),
            // /** @type {HookMap<AsyncSeriesBailHook<[ResourceDataWithData, ResolveData], true | void>>} */
            // resolveForScheme: new HookMap(
            // 	() => new AsyncSeriesBailHook(["resourceData"])
            // ),
            // /** @type {HookMap<AsyncSeriesBailHook<[ResourceDataWithData, ResolveData], true | void>>} */
            // resolveInScheme: new HookMap(
            // 	() => new AsyncSeriesBailHook(["resourceData", "resolveData"])
            // ),
            // /** @type {AsyncSeriesBailHook<[ResolveData], Module>} */
            // factorize: new AsyncSeriesBailHook(["resolveData"]),
            // /** @type {AsyncSeriesBailHook<[ResolveData], false | void>} */
            beforeResolve: new tapable_1.AsyncSeriesBailHook(["resolveData"])
            // /** @type {AsyncSeriesBailHook<[ResolveData], false | void>} */
            // afterResolve: new AsyncSeriesBailHook(["resolveData"]),
            // /** @type {AsyncSeriesBailHook<[ResolveData["createData"], ResolveData], Module | void>} */
            // createModule: new AsyncSeriesBailHook(["createData", "resolveData"]),
            // /** @type {SyncWaterfallHook<[Module, ResolveData["createData"], ResolveData], Module>} */
            // module: new SyncWaterfallHook(["module", "createData", "resolveData"]),
            // createParser: new HookMap(() => new SyncBailHook(["parserOptions"])),
            // parser: new HookMap(() => new SyncHook(["parser", "parserOptions"])),
            // createGenerator: new HookMap(
            // 	() => new SyncBailHook(["generatorOptions"])
            // ),
            // generator: new HookMap(
            // 	() => new SyncHook(["generator", "generatorOptions"])
            // )
        };
    }
}
exports.ContextModuleFactory = ContextModuleFactory;
//# sourceMappingURL=ContextModuleFactory.js.map
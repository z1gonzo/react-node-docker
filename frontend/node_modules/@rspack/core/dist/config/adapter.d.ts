import type { RawOptions, RawLibraryOptions } from "@rspack/binding";
import { Compiler } from "../Compiler";
import { LoaderContext, LoaderDefinition, LoaderDefinitionFunction } from "./adapterRuleUse";
import { LibraryOptions, EntryRuntime, ChunkLoading } from "./zod";
import { RspackOptionsNormalized } from "./normalization";
export type { LoaderContext, LoaderDefinition, LoaderDefinitionFunction };
export declare const getRawOptions: (options: RspackOptionsNormalized, compiler: Compiler, processResource: (loaderContext: LoaderContext, resourcePath: string, callback: any) => void) => RawOptions;
export declare function getRawLibrary(library: LibraryOptions): RawLibraryOptions;
export declare function getRawEntryRuntime(runtime: EntryRuntime): string | undefined;
export declare function getRawChunkLoading(chunkLoading: ChunkLoading): string;
//# sourceMappingURL=adapter.d.ts.map
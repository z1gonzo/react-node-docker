import { FederationHost } from '../core';
import { RemoteEntryExports, Options, Remote, ShareInfos, RemoteInfo, ShareScopeMap } from '../type';
export type ModuleOptions = ConstructorParameters<typeof Module>[0];
type HostInfo = Remote;
declare class Module {
    hostInfo: HostInfo;
    remoteInfo: RemoteInfo;
    inited: boolean;
    shared: ShareInfos;
    remoteEntryExports?: RemoteEntryExports;
    lib: RemoteEntryExports | undefined;
    loaderHook: FederationHost['loaderHook'];
    shareScopeMap: ShareScopeMap;
    constructor({ hostInfo, remoteInfo, shared, loaderHook, shareScopeMap, }: {
        hostInfo: HostInfo;
        remoteInfo: RemoteInfo;
        shared: ShareInfos;
        plugins: Options['plugins'];
        loaderHook: FederationHost['loaderHook'];
        shareScopeMap: ShareScopeMap;
    });
    getEntry(): Promise<RemoteEntryExports>;
    get(expose: string, options?: {
        loadFactory?: boolean;
    }): Promise<any>;
}
export { Module };
